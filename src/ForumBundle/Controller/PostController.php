<?php

namespace ForumBundle\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use MainBundle\Entity\Categorie;
use MainBundle\Entity\Post;
use ForumBundle\Form\PostType;
use Symfony\Component\OptionsResolver\OptionsResolver;


class PostController extends Controller
{
    public function createAction(Request $request , $id ,$iduser)
    {
        $em = $this->getDoctrine()->getManager();
        $modele= $em->getRepository(Categorie::class)->find($id);
        $voiture = new Post();
        $voiture->setCategorie($modele);
        $voiture->setUser($this->getUser());
        $form=$this->createForm(PostType::class,$voiture);
        $form->handleRequest($request);
        if($form->isValid())
        {
            $em=$this->getDoctrine()->getManager();
            $voiture->setDatePublication(new \DateTime('now '));
            $em->getRepository(Categorie::class)->findthat($id);

            $file = $voiture->getImage();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('image_directory',$fileName),
                $fileName
            );

            $voiture->setImage($fileName);



            $voiture= $form->getData();
            $em->persist($voiture);
            $em->flush();

            return $this->redirectToRoute("forum_post_read",array('id'=>$id));
        }
        return $this->render('ForumBundle:forum:create_sujet.html.twig', array(
            "form"=>$form->createView()
        ));
    }

    public function deleteAction($ids ,$id )
    {
        $em = $this->getDoctrine()->getManager();
        $modele= $em->getRepository(Post::class)->find($ids);
        $em->getRepository(Categorie::class)->findthis($id);
        $em->remove($modele);
        $em->flush();
        return $this->redirectToRoute("forum_post_read",array('id'=>$id));
    }

    public function readAction($id)
    {
        $em= $this->getDoctrine()->getManager();
        $recent= $em->getRepository(Post::class)->findRecent1($id);
        $voitures=$em->getRepository("MainBundle:Post")->findByIdCategorie($id);
        $em= $this->getDoctrine()->getManager();
        $request= $this->get('request_stack')->getCurrentRequest();

        if($request->getMethod()=='POST')
        {

            $libelle=$request->get('libelle');


            $voitures=$em->getRepository("MainBundle:Post")->findBy(array('titre'=>$libelle));


            return $this->render("ForumBundle:Forum:read_sujet.html.twig",array('voitures'=>$voitures,"id"=>$id,"recent"=>$recent));
        }

        return $this->render('ForumBundle:forum:read_sujet.html.twig', array(
            "voitures"=>$voitures,"id"=>$id,'recent'=>$recent,
        ));
    }

    public function updateAction(Request $request, $id , $ids )
    {
        $em= $this->getDoctrine()->getManager();
        $voiture=$em->getRepository("MainBundle:Post")->find($ids);
        $form=$this->createForm(PostType::class,$voiture);
        $form->handleRequest($request);
        if($form->isValid())
        {
            $em=$this->getDoctrine()->getManager();
            $file = $voiture->getImage();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('image_directory',$fileName),
                $fileName
            );

            // updates the 'brochure' property to store the PDF file name
            // instead of its contents
            $voiture->setImage($fileName);
            $em->flush();
            return $this->redirectToRoute("forum_post_read",array('id'=>$id));
        }
        return $this->render('ForumBundle:forum:update_sujet.html.twig', array(
            "form"=>$form->createView()

        ));


    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }


    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => Post::class,
        ));

    }


}
